
Agenda:

********

> Jenkins triggers job

when to trigger 

> trigger the execution of job on time(schedule)
   > build predioically
   

> trigger the executtion of job when commit is done on github
> trigger the execution of a job when its parent job is executed 


TRIGGERS

If we want to automatically trigger a Job

Build triggers for any job:

1. Trigger builds remotely (e.g., from scripts)

Select the above very first option
give Authentication token as : token1 
any unique token number

And then copy the path provided below in this format:
JENKINS_URL/job/job4/build?token=TOKEN_NAME 


update the above url in this way:
Jenkins_URL: Curent url :http://3.140.252.165:8080
Token_NAME: token number/name provided above

Take this path and execute on anyother browser.

http://3.140.252.165:8080//job/job4/build?token=token1

Login as admin admin
you can run that job.

2. GitHub hook trigger for GITScm polling

> Select the above option

Save the job and now go to git hub

Always save the job and then only  go to git hub, perform these steps

go to the repository setting
select webhooks on left side
delete if any exisitng webhook

click on createwebhook on right side

provide following information:

Payload URL : jenkinsurl/github-webhook/ ===> http://3.140.252.165:8080/github-webhook/

Content type : select application/json

Secret: no need of any value

Which events would you like to trigger this webhook?

select first option -- Just the push event.

Select Active
click on add webhook.

now make some changes in repo,
go to jenkins--> you will see a new build has been created

3. Trigger prieodically

Create anew Job--> build trigger--> build preodically --> give */2 * * * * --> Save and build now
All build will be genrated automatically every 2 mins

4. Trigger by POLL SCM

Create a new Job-->Source code management--> Add git path

https://github.com/Sonal0409/GITHUBJENKINSDEMO

Build Triggers--> Poll SCM --> * * * * *


> Maven introduction 

 $ sudo su -
 $ yum install maven -y
 $ mvn --version

> Jenkins Configure global tools


 >> go to manage jenkins---> global tool configuration

 > add JDK --> uncehck install automatically box

 > give name: myjava
 > JAVA_HOME -->  /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.312.b07-1.amzn2.0.2.x86_64


to get JAVA_HOME variable --> execute command on CLI  $ mvn --version


 > scroll down --> add maven
 > name: mymaven
 
 keep it checked install automatically box

Save all the changes


> Maven commands through jenkins

any developer who is writing the code using java will first build a project Maven project locally

developer will push the code as a maven project in github

who will create a maven project --> eclipse/intellij

  > src folder
    > src/main/java ===> source code will be present - java files
    > src/test/java ===> unit test cases/selenium test cases

  > pom.xml  ==> project object module.xml
   updated by the developer locally

   1. dependendcies
      > software/jar files/tools need for him/her to write the code
         > name
         > version
   2. plugin

     > add maven plugin that we will use for build process
        > name & version

Maven is a build tool

 > plugin based tool

 > 2 types of plugin in maven

  > core plugin/ build plugins

    > compile
      test
      package
      deploy

  > reporting plugins

    > code review
    > code coverage
    > test reports
